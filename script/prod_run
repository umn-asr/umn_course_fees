#!/bin/bash
set -euo pipefail

# script/prod_run: Run the production Docker container against the staging or production environments.

cd "$(dirname "$0")/.."

CONTAINER_NAME="$(basename $(pwd))"
DOCKER_REPO_HOSTNAME="asr-docker-local.artifactory.umn.edu"
IMAGE_NAME="$DOCKER_REPO_HOSTNAME/$CONTAINER_NAME:latest"

if [ $# -eq 0 ]; then
  echo "Provide an environment: script/prod_run [production|staging]"
  exit 1
fi

RAILS_ENV=$1
echo "==> Populating environment variables for '${RAILS_ENV}'..."

docker run \
  -it --rm --pull=always \
  -e LASTPASS_USERNAME=$(whoami) \
  -v "$(pwd):/workdir" \
  asrcustomsolutions/lastpass:latest \
  ./script/_populate_env "$RAILS_ENV"

echo "==> Building container for ${IMAGE_NAME}"
./script/prod_build "$RAILS_ENV"

echo "==> Running container for ${IMAGE_NAME}"
source ".env.${RAILS_ENV}"
docker run \
  --init \
  -it \
  --rm \
  --name="$CONTAINER_NAME" \
  --env="DATABASE_HOST=$DATABASE_HOST" \
  --env="DATABASE_NAME=$DATABASE_NAME" \
  --env="DATABASE_USER=$DATABASE_USER" \
  --env="DATABASE_PASSWORD=$DATABASE_PASSWORD" \
  --env="SECRET_KEY_BASE=$SECRET_KEY_BASE" \
  --env="RAILS_ENV=$RAILS_ENV" \
  --publish="3000:3000" \
  "$IMAGE_NAME"
